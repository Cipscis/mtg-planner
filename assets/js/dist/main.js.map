{"version":3,"file":"main.js","mappings":"mBAEA,MAAMA,EACLC,MAIAC,YAAYC,GAEVC,KAAKH,MADiB,iBAAZE,EACGH,EAAKK,aAAaF,GAElBA,EAIXG,eACH,OAAOF,KAAKH,MAAMM,QAAO,CAACC,EAAKC,IAASD,EAAMC,EAAKC,UAAU,GAG9DC,oBAAoBC,GAMnB,OALcA,EACZC,MAAM,MACNC,IAAId,GAAK,GACTe,QAAQC,GAAUA,aClBtB,MACCC,KACAP,SAEAR,YAAYC,GACXC,KAAKa,KAAOd,EAAQc,KACpBb,KAAKM,SAAWP,EAAQO,aDiBzBC,SAAyBO,GACxB,MAAMC,EAAYD,EAAKE,MAAM,sCAE7B,OAAID,EACI,CACNF,KAAME,EAAU,GAChBT,SAAUW,SAASF,EAAU,GAAI,KAG3B,MEhCV,MAAMG,EAAO,IAAItB,ECLF,whEDMfuB,QAAQC,IAAIF,EAAKrB,MAAOqB,EAAKhB,W","sources":["webpack://mtg-planner/./app/assets/js/src/Deck.ts","webpack://mtg-planner/./app/assets/js/src/Card.ts","webpack://mtg-planner/./app/assets/js/src/main.ts","webpack://mtg-planner/./app/assets/js/src/decklist.ts"],"sourcesContent":["import { Card } from './Card';\n\nclass Deck {\n\tcards: Card[];\n\n\tconstructor(decklist: string)\n\tconstructor(cards: Card[])\n\tconstructor(options: string | Card[]) {\n\t\tif (typeof options === 'string') {\n\t\t\tthis.cards = Deck.readDecklist(options);\n\t\t} else {\n\t\t\tthis.cards = options;\n\t\t}\n\t}\n\n\tget numCards() {\n\t\treturn this.cards.reduce((sum, card) => sum + card.quantity, 0);\n\t}\n\n\tstatic readDecklist(decklist: string): Card[] {\n\t\tconst cards = decklist\n\t\t\t.split('\\n')\n\t\t\t.map(Deck.#readDecklistLine)\n\t\t\t.filter((value) => value instanceof Card) as Card[];\n\n\t\treturn cards;\n\t}\n\n\tstatic #readDecklistLine(line: string): Card | null {\n\t\tconst mainParts = line.match(/^(\\d+)x\\s+(.+?)(\\s*$|\\s+(#|\\(|\\*))/);\n\n\t\tif (mainParts) {\n\t\t\treturn {\n\t\t\t\tname: mainParts[2],\n\t\t\t\tquantity: parseInt(mainParts[1], 10),\n\t\t\t};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport { Deck };\n","interface ICard {\n\tname: string;\n\tquantity: number;\n}\n\nclass Card implements ICard {\n\tname: string;\n\tquantity: number;\n\n\tconstructor(options: ICard) {\n\t\tthis.name = options.name;\n\t\tthis.quantity = options.quantity;\n\t}\n};\n\nexport { Card };\n","// import * as scry from 'scryfall-sdk';\n\nimport decklist from './decklist';\nimport { Deck } from './Deck';\n\nconst deck = new Deck(decklist);\nconsole.log(deck.cards, deck.numCards);\n","export default `1x Abundance #Draw #LandsInHand #Proxy\n1x Acidic Slime #ETB #Removal\n1x Aether Tunnel #Unblockable\n1x Arboreal Grazer #ETB #HandRamp\n1x Awakening of Vitu-Ghazi #Bomb\n1x Body Double #Lazav\n1x Bounty of the Luxa #Draw #Ramp\n1x Budoka Gardener #HandRamp #Sink\n1x Cancel #Counterspell\n1x Clone Legion #Bomb #Lazav\n1x Coiling Oracle #Draw #ETB #TopRamp\n1x Confounding Conundrum\n1x Coral Atoll\n1x Covenant of Minds #Draw #Graveyard #Lazav\n1x Crash of Rhino Beetles\n1x Crystal Shard #Bounce #Proxy\n1x Cultivate #LandsInHand #Ramp\n1x Curfew #Bounce\n1x Dungrove Elder\n1x Elemental Bond #Draw #Proxy\n1x Engulfing Slagwurm\n1x Entrancing Melody #Bomb\n1x Evolving Wilds\n1x Expropriate #Bomb\n1x Far Wanderings #Ramp #Threshold\n1x Farhaven Elf #ETB #Ramp\n16x Forest\n1x Foster #Graveyard\n1x Gargos, Vicious Watcher\n1x Garruk's Packleader #Draw\n1x Growth Spiral #Draw #HandRamp\n16x Island\n1x Jungle Basin\n1x Kiora, Behemoth Beckoner #Draw\n1x Mistcutter Hydra\n1x Neutralize #Counterspell\n1x Nylea's Intervention #LandsInHand #Proxy\n1x Path of Discovery #LandsInHand\n1x Portal of Sanctuary #Bounce\n1x Protean Hydra\n1x Quickling #Bounce\n1x Rampaging Baloths #Bomb #Landfall\n1x Reclamation Sage #ETB #Removal\n1x Reliquary Tower #HandSize\n1x Repudiate / Replicate #Proxy #Uro\n1x Risen Reef #Draw #HandRamp\n1x Rogue's Passage #Unblockable\n1x Runic Armasaur #Draw\n1x Sakura-Tribe Elder #Graveyard #Ramp\n1x Sandwurm Convergence #Bomb\n1x Scaretiller #GraveyardRamp #HandRamp\n1x Scute Mob\n1x Seer's Sundial #Draw #Landfall\n1x Silklash Spider #Bomb\n1x Simic Growth Chamber #Proxy\n1x Simic Guildgate\n1x Snap #Bounce #Proxy\n1x Soul of Zendikar #Bomb #Sink\n1x Spellbook #HandSize\n1x Sphinx of Magosi #Bomb #Draw #Sink\n1x Stifle #Uro\n1x Sundial of the Infinite #Uro\n1x Tale's End #Counterspell #Uro\n1x Tatyova, Benthic Druid #Draw #Landfall\n1x Temur Sabertooth #Bounce\n1x Terramorphic Expanse\n1x Unsummon #Bounce\n1x Uro, Titan of Nature's Wrath *CMDR* #Draw #ETB #HandRamp\n1x Wonder #Proxy\n1x Yavimaya Elder #Graveyard #LandsInHand`;"],"names":["Deck","cards","constructor","options","this","readDecklist","numCards","reduce","sum","card","quantity","static","decklist","split","map","filter","value","name","line","mainParts","match","parseInt","deck","console","log"],"sourceRoot":""}